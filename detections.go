// This file was auto-generated by Fern from our API Definition.

package intrinsic

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/intrinsic-org/intrinsic-go/core"
)

type DetectionObject struct {
	// ID of the detection
	ID *string `json:"id,omitempty" url:"id,omitempty"`
	// ID of the event associated with a detection
	EventID string                `json:"event_id" url:"event_id"`
	Status  DetectionObjectStatus `json:"status,omitempty" url:"status,omitempty"`
	// Whether any policies were violated
	ViolatesPolicy   *bool                   `json:"violates_policy,omitempty" url:"violates_policy,omitempty"`
	ViolatedPolicies []*ViolatedPolicyObject `json:"violated_policies,omitempty" url:"violated_policies,omitempty"`
	// Explanation of the detection outcome
	Explanation *string `json:"explanation,omitempty" url:"explanation,omitempty"`
	object      string

	_rawJSON json.RawMessage
}

func (d *DetectionObject) Object() string {
	return d.object
}

func (d *DetectionObject) UnmarshalJSON(data []byte) error {
	type embed DetectionObject
	var unmarshaler = struct {
		embed
	}{
		embed: embed(*d),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*d = DetectionObject(unmarshaler.embed)
	d.object = "detection"
	d._rawJSON = json.RawMessage(data)
	return nil
}

func (d *DetectionObject) MarshalJSON() ([]byte, error) {
	type embed DetectionObject
	var marshaler = struct {
		embed
		Object string `json:"object"`
	}{
		embed:  embed(*d),
		Object: "detection",
	}
	return json.Marshal(marshaler)
}

func (d *DetectionObject) String() string {
	if len(d._rawJSON) > 0 {
		if value, err := core.StringifyJSON(d._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}
